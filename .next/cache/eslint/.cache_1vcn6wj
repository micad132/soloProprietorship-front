[{"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\App.test.tsx":"1","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\App.tsx":"2","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\authorization\\PasswordField.component.tsx":"3","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\authorization\\TextField.component.tsx":"4","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\AuthorizationWrapper.tsx":"5","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\ErrorComponent.tsx":"6","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\index.tsx":"7","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\layout\\footer\\index.tsx":"8","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\layout\\header\\index.tsx":"9","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\layout\\layout.tsx":"10","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\about\\page.tsx":"11","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\home\\index.tsx":"12","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\login\\NoAccount.tsx":"13","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\login\\page.tsx":"14","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\register\\page.tsx":"15","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\react-app-env.d.ts":"16","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\reportWebVitals.ts":"17","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\services\\validators.ts":"18","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\setupTests.ts":"19","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\store\\index.ts":"20","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\store\\reducers\\errorReducer.tsx":"21","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\types\\authorization.ts":"22"},{"size":273,"mtime":1679763881706,"results":"23","hashOfConfig":"24"},{"size":319,"mtime":1681043096478,"results":"25","hashOfConfig":"24"},{"size":778,"mtime":1681042787021,"results":"26","hashOfConfig":"24"},{"size":761,"mtime":1681042787031,"results":"27","hashOfConfig":"24"},{"size":264,"mtime":1679769220663,"results":"28","hashOfConfig":"24"},{"size":281,"mtime":1680972487297,"results":"29","hashOfConfig":"24"},{"size":688,"mtime":1681043324191,"results":"30","hashOfConfig":"24"},{"size":249,"mtime":1679773378039,"results":"31","hashOfConfig":"24"},{"size":459,"mtime":1681042913184,"results":"32","hashOfConfig":"24"},{"size":656,"mtime":1681043046765,"results":"33","hashOfConfig":"24"},{"size":147,"mtime":1681042787054,"results":"34","hashOfConfig":"24"},{"size":131,"mtime":1679767462928,"results":"35","hashOfConfig":"24"},{"size":399,"mtime":1681043386959,"results":"36","hashOfConfig":"24"},{"size":2698,"mtime":1681043274571,"results":"37","hashOfConfig":"24"},{"size":5948,"mtime":1681043274581,"results":"38","hashOfConfig":"24"},{"size":41,"mtime":1679764184507,"results":"39","hashOfConfig":"24"},{"size":425,"mtime":1679763881706,"results":"40","hashOfConfig":"24"},{"size":1576,"mtime":1680972487303,"results":"41","hashOfConfig":"24"},{"size":241,"mtime":1679763881706,"results":"42","hashOfConfig":"24"},{"size":453,"mtime":1680972487303,"results":"43","hashOfConfig":"24"},{"size":574,"mtime":1680972487304,"results":"44","hashOfConfig":"24"},{"size":242,"mtime":1680972487305,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18kyo4b",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\App.test.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\App.tsx",["117"],[],"import React from 'react';\nimport './App.css';\nimport Layout from \"./layout/layout\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Test</h1>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\authorization\\PasswordField.component.tsx",["118"],[],"import {TextField} from \"@mui/material\";\nimport ErrorComponent from \"../ErrorComponent\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport {LoginType} from \"../../types/authorization\";\n\ninterface Props {\n    value: string,\n    setPasswordValue: Dispatch<SetStateAction<any>>;\n    isError: boolean,\n    errorMsg: string,\n}\nconst PasswordFieldComponent = ({value,setPasswordValue, isError, errorMsg}: Props) => {\n\n    return(\n        <>\n            <TextField\n                id=\"outlined-required\"\n                label=\"HasÅ‚o\"\n                type=\"password\"\n                value={value}\n                onChange={setPasswordValue}\n            />\n            {isError && <ErrorComponent errorMsg={errorMsg} />}\n        </>\n    )\n}\n\nexport default PasswordFieldComponent;\n","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\authorization\\TextField.component.tsx",["119"],[],"import {TextField} from \"@mui/material\";\nimport ErrorComponent from \"../ErrorComponent\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport {sanitizeData} from \"../../services/validators\";\n\ninterface Props {\n    value: string,\n    setLoginValues: Dispatch<SetStateAction<any>>;\n    isError: boolean,\n    label: string,\n    errorMsg: string,\n}\n\nconst TextFieldComponent = ({value,setLoginValues, isError, label, errorMsg}: Props) => {\n\n    return(\n        <>\n            <TextField\n                id=\"outlined-required\"\n                label={label}\n                value={value}\n                onChange={setLoginValues}\n            />\n            {isError && <ErrorComponent errorMsg={errorMsg} />}\n        </>\n    )\n}\n\nexport default TextFieldComponent;\n","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\AuthorizationWrapper.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\components\\ErrorComponent.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\index.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\layout\\footer\\index.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\layout\\header\\index.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\layout\\layout.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\about\\page.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\home\\index.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\login\\NoAccount.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\login\\page.tsx",["120","121"],[],"import {Button, TextField} from \"@mui/material\";\r\nimport styles from '../../Layout.module.scss';\r\nimport NoAccount from \"./NoAccount\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useState} from \"react\";\r\nimport AuthorizationWrapper from \"../../components/AuthorizationWrapper\";\r\nimport {sanitizeData, validateLogin} from \"../../services/validators\";\r\nimport TextFieldComponent from \"../../components/authorization/TextField.component\";\r\nimport PasswordFieldComponent from \"../../components/authorization/PasswordField.component\";\r\nimport {LoginType} from \"../../types/authorization\";\r\n\r\n\r\nconst initialLoginValues: LoginType = {\r\n    email: '',\r\n    password: '',\r\n}\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n    const [loginValues, setLoginValues] = useState<LoginType>(initialLoginValues);\r\n    const [errorValues, setErrorValues] = useState<string[]>([]);\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const result = validateLogin(loginValues);\r\n        console.log('WYNIKI', loginValues);\r\n        if(result.success) {\r\n            toast.success(\"Zalogowano\");\r\n            setLoginValues(initialLoginValues);\r\n            // setTimeout(() => navigate('/', { replace: true}), 1000);\r\n        } else {\r\n            const errorArray = result.error.errors.map(error => error.path[0]);\r\n            setErrorValues(errorArray as string[]);\r\n            toast.error(\"Podano niepoprawne dane!\");\r\n        }\r\n\r\n\r\n    }\r\n    const {email, password} = loginValues;\r\n    return(\r\n        <AuthorizationWrapper>\r\n            <form onSubmit={(e) => onSubmit(e)}>\r\n                <h1>Login</h1>\r\n                <TextFieldComponent\r\n                    setLoginValues={({target: { value}}) => setLoginValues((prevState) => ({\r\n                        ...prevState,\r\n                        email: sanitizeData(value),\r\n                    }))}\r\n                    value={email}\r\n                    isError={errorValues.includes('email')}\r\n                    label='E-mail'\r\n                    errorMsg='Niepoprawny email!'\r\n                />\r\n\r\n                <PasswordFieldComponent\r\n                    value={password}\r\n                    setPasswordValue={({target: { value}}) => setLoginValues((prevState) => ({\r\n                        ...prevState,\r\n                        password: sanitizeData(value),\r\n                    }))}\r\n                    isError={errorValues.includes('password')}\r\n                    errorMsg='Niepoprawne hasÅ‚o!'\r\n                />\r\n                <Button variant=\"contained\" type=\"submit\">Zaloguj siÄ™</Button>\r\n                <NoAccount />\r\n            </form>\r\n        </AuthorizationWrapper>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\pages\\register\\page.tsx",["122"],[],"import { useState } from 'react';\r\nimport {Button, TextField} from \"@mui/material\";\r\nimport {toast} from \"react-toastify\";\r\nimport { sanitize } from 'dompurify';\r\nimport {RegisterType} from \"../../types/authorization\";\r\nimport {validateRegister} from \"../../services/validators\";\r\nimport AuthorizationWrapper from \"../../components/AuthorizationWrapper\";\r\nimport TextFieldComponent from \"../../components/authorization/TextField.component\";\r\nimport PasswordFieldComponent from \"../../components/authorization/PasswordField.component\";\r\n\r\n\r\nconst initialRegisterValues: RegisterType = {\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    postalCode: '',\r\n    cityName: '',\r\n}\r\n\r\nconst Register = () => {\r\n\r\n    const [registerValues, setRegisterValues] = useState<RegisterType>(initialRegisterValues);\r\n    const [errorValues, setErrorValues] = useState<string[]>([]);\r\n\r\n    const sanitizeData = (value: string): string => sanitize(value, { USE_PROFILES: { html: false }});\r\n\r\n    const nameCheck = (name: string): boolean => name.includes('&');\r\n\r\n    const submitForm = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        console.log('STAN', registerValues);\r\n        const result = validateRegister(registerValues);\r\n        if (result.success) {\r\n            console.log(registerValues.name);\r\n            if(nameCheck(registerValues.name)) {\r\n                console.log('WHAT');\r\n                toast.success(\"jd\");\r\n            }\r\n            setRegisterValues(initialRegisterValues);\r\n            toast.success(\"PomyÅ›lnie zarejestrowano, za chwilÄ™ nastÄ…pi przekierowanie na stronÄ™ logowania!\");\r\n            // setTimeout(() => navigate('/login', { replace: true}), 1000);\r\n        } else {\r\n            console.log(result.error.errors);\r\n            const errorArray = result.error.errors.map(error => error.path);\r\n            console.log(errorArray.flat());\r\n            setErrorValues(errorArray.flat() as string[]);\r\n        }\r\n    }\r\n    const {name,surname,email,password,confirmPassword,postalCode,cityName} = registerValues;\r\n    const registerNameError = errorValues.includes('forbiddenName') ?\r\n        'Niewlasciwe znaki!'\r\n        : errorValues.includes('name')\r\n            ? 'ImiÄ™ musi zawieraÄ‡ od 5 do 20 znakÃ³w!'\r\n            : ''\r\n    return(\r\n        <AuthorizationWrapper>\r\n            <form onSubmit={(e) => submitForm(e)}>\r\n                <h1>Register</h1>\r\n                <TextFieldComponent\r\n                    value={name}\r\n                    setLoginValues={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        name: sanitizeData(value),\r\n                    }))}\r\n                    isError={errorValues.includes('name')}\r\n                    label='ImiÄ™'\r\n                    errorMsg={registerNameError}\r\n                />\r\n                <TextFieldComponent\r\n                    value={surname}\r\n                    setLoginValues={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        surname: value,\r\n                    }))}\r\n                    isError={errorValues.includes('surname')}\r\n                    label='Nazwisko'\r\n                    errorMsg='Nazwisko musi zawieraÄ‡ od 5 do 20 znakÃ³w!'\r\n                />\r\n                <TextFieldComponent\r\n                    value={email}\r\n                    setLoginValues={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        email: value,\r\n                    }))}\r\n                    isError={errorValues.includes('email')}\r\n                    label='E-mail'\r\n                    errorMsg='E-mail nie zgadza siÄ™ z poprawnym formatem!'\r\n                />\r\n                <PasswordFieldComponent\r\n                    value={password}\r\n                    setPasswordValue={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        password: value,\r\n                    }))}\r\n                    isError={errorValues.includes('password')}\r\n                    errorMsg='HasÅ‚o musi zawieraÄ‡ od 5 do 20 znakÃ³w!'\r\n                />\r\n                <PasswordFieldComponent\r\n                    value={confirmPassword}\r\n                    setPasswordValue={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        confirmPassword: value,\r\n                    }))}\r\n                    isError={errorValues.includes('confirmPassword')}\r\n                    errorMsg='HasÅ‚o musi zawieraÄ‡ od 5 do 20 znakÃ³w!'\r\n                />\r\n                <TextFieldComponent\r\n                    value={postalCode}\r\n                    setLoginValues={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        postalCode: value,\r\n                    }))}\r\n                    isError={errorValues.includes('postalCode')}\r\n                    label='Kod pocztowy'\r\n                    errorMsg='Kod pocztowy nie zgadza siÄ™ z poprawnym formatem!'\r\n                />\r\n                <TextFieldComponent\r\n                    value={cityName}\r\n                    setLoginValues={({target: { value}}) => setRegisterValues((prevState) => ({\r\n                        ...prevState,\r\n                        cityName: value,\r\n                    }))}\r\n                    isError={errorValues.includes('cityName')}\r\n                    label='Miasto'\r\n                    errorMsg='Miasto musi zawieraÄ‡ od 5 do 20 znakÃ³w'\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                >Zarejestruj siÄ™</Button>\r\n            </form>\r\n        </AuthorizationWrapper>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\react-app-env.d.ts",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\reportWebVitals.ts",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\services\\validators.ts",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\setupTests.ts",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\store\\index.ts",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\store\\reducers\\errorReducer.tsx",[],[],"C:\\Users\\mosiolekm\\Desktop\\projekt_pd\\front\\src\\types\\authorization.ts",[],[],{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"128","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":21},{"ruleId":"123","severity":1,"message":"129","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"130","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"129","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},"@typescript-eslint/no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'LoginType' is defined but never used.","'sanitizeData' is defined but never used.","'TextField' is defined but never used.","'styles' is defined but never used."]